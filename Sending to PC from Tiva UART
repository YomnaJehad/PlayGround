#define SYSCTL_RCGCUART_R       (*((volatile uint32_t *)0x400FE618))

#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))
#define UART0_RSR_R             (*((volatile uint32_t *)0x4000C004))
#define UART0_ECR_R             (*((volatile uint32_t *)0x4000C004))
#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))
#define UART0_ILPR_R            (*((volatile uint32_t *)0x4000C020))
#define UART0_IBRD_R            (*((volatile uint32_t *)0x4000C024))
#define UART0_FBRD_R            (*((volatile uint32_t *)0x4000C028))
#define UART0_LCRH_R            (*((volatile uint32_t *)0x4000C02C))
#define UART0_CTL_R             (*((volatile uint32_t *)0x4000C030))
#define UART0_IFLS_R            (*((volatile uint32_t *)0x4000C034))
#define UART0_IM_R              (*((volatile uint32_t *)0x4000C038))
#define UART0_RIS_R             (*((volatile uint32_t *)0x4000C03C))
#define UART0_MIS_R             (*((volatile uint32_t *)0x4000C040))
#define UART0_ICR_R             (*((volatile uint32_t *)0x4000C044))
#define UART0_DMACTL_R          (*((volatile uint32_t *)0x4000C048))
#define UART0_9BITADDR_R        (*((volatile uint32_t *)0x4000C0A4))
#define UART0_9BITAMASK_R       (*((volatile uint32_t *)0x4000C0A8))
#define UART0_PP_R              (*((volatile uint32_t *)0x4000CFC0))
#define UART0_CC_R              (*((volatile uint32_t *)0x4000CFC8))
void UART_Init(void)  {
  SYSCTL_RCGCUART_R |= 0x1; //Activate UART0
  UART0_CTL_R &= ~0x1; //disable UART0
  UART0_IBRD_R =130 ; //(20000000/(16*9600))=int(130.2083)
  UART0_FBRD_R =13; //(.2083*64+.5=13.833)

  UART0_LCRH_R=0x70; //8-bit word length, enable FIFO
  UART0_CTL_R= 0x301; //enable RXE, TXE and UART

//  SYSCTL_RCGCGPIO_R |= 0x1; //Activate port A
  
  }

void UART_Write(char c){
  while((UART0_FR_R&0x0020)!=0); //wait until TCFF is 0
  UART0_DR_R= c;
  }

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  Serial.print('o');
  Serial.println('n');
}
